# local
config.base = file:/etc/cas
ldap.ldapUrl=ldaps://IESUSAUSDC02.iesabroad.org:636
datasource.password=cerbadm.owner
datasource.url=jdbc:jtds:sqlserver://IESUSAUSSQLDEV02/IESApplicationDB;maxStatements=0
cas.host.name:iesusegvprd01.iesabroad.org:50515

# UAT
#config.base = file:/e:/vhost/tomcat.8.0.45.CAS-pap-01/etc/cas
#ldap.ldapUrl=ldaps://IESUSAUSDC01.iesabroad.org:636
#datasource.password=VW5veFDrVIpwNw6lRcqu
#datasource.url=jdbc:jtds:sqlserver://IESUSEGVSQL01/IESApplicationDB;maxStatements=0
#cas.host.name=cas.iesabroad.org

datasource.username=cerbadm_01_own
cas.server.name=https://${cas.host.name}
cas.server.prefix=${cas.server.name}/cas


#common
datasource.driver=net.sourceforge.jtds.jdbc.Driver
ldap.type=AUTHENTICATED
ldap.bindDn=cn=A Winston,CN=Users,DC=iesabroad,DC=org
ldap.bindCredential=7Egej5DUs4
#ldap.bindDn=CN=Mike Koehler,OU=E-Gineering,OU=Service Accounts,DC=iesabroad,DC=org
ldap.principalAttributeId=sAMAccountName
ldap.poolPassivator=NONE
ldap.principalTransformation=classpath:/org/iesabroad/cas/groovy/IESPrincipalNameTransformer.groovy
ldap.searchFilter=sAMAccountName={user}
ldap.followReferrals=false
ldap.minPoolSize=1
ldap.maxPoolSize=2
ldap.hostnameVerifier=ANY
ldap.useSsl=true
passwordPolicy.enabled=true
passwordPolicy.warnAll=false
passwordPolicy.accountStateHandlingEnabled=true
passwordPolicy.customPolicyClass=org.iesabroad.cas.IesAuthenticationResponseHandler
# not used by IesAuthenticationResponseHandler, hard coded. cas.authn.ldap[*].passwordPolicy.warningDays=7 

# development settings
logging.config=${config.base}/config/log4j2.xml
logging.level.org.apereo=DEBUG
logging.level.org.apereo.cas.services.AbstractServicesManager=WARN
logging.level.org.jasig.cas=DEBUG
logging.level.org.iesabroad=DEBUG
logging.level.org.thymeleaf=DEBUG
spring.thymeleaf.cache=false


# keys
cas.tgc.secure:true
cas.tgc.crypto.signing.key:bMpP_eHgIsL1kz_cnxEqYo9Bb384V70eZIvWctQ5V6xTO4P6wsQjFlglD9OSQNlFdb0mT2Q1E3qXdo05_tzrjQ
cas.tgc.crypto.encryption.key:r88iOMdbRMLOkITV54kax4WgadTdzUYSBXNhOp_oqS0
cas.webflow.crypto.signing.key:iVx3jU9qrVtQJvT1FqVHQxP8X8WZOjQuzy2mi-xEi3zlDlJuyJ6p7ysIbmEIXLotSKR3bzjjuAbLAJR81xISSw
cas.webflow.crypto.encryption.key:X+HoFema76WxIrlHD+ZSGA==

# following line is to disable static users (default config creates casuser:Mellon)
cas.authn.accept.users=


# Block of ldap definitions, one per each of the following OUs (per Jamey Vester),  baseDN, order, and name are defined in this section
# otherwise use the common definitions above
#OU=IES,DC=iesabroad,DC=org
#OU=Users,OU=SAF,DC=iesabroad,DC=org
#OU=Users,OU=China,OU=SAF Country Offices,DC=iesabroad,DC=org
#OU=Users,OU=Japan,OU=SAF Country Offices,DC=iesabroad,DC=org
#OU=Users,OU=Korea,OU=SAF Country Offices,DC=iesabroad,DC=org

#ldap config, searches for user by sAMAccountName, then uses that and provided password to bind
cas.authn.ldap[0].order=0
cas.authn.ldap[0].name=Active Directory 1 - OU=IES
cas.authn.ldap[0].baseDn=DC=iesabroad,DC=org
#cas.authn.ldap[0].baseDn=OU=IES,DC=iesabroad,DC=org
cas.authn.ldap[0].type=${ldap.type}
cas.authn.ldap[0].ldapUrl=${ldap.ldapUrl}
cas.authn.ldap[0].bindDn=${ldap.bindDn}
cas.authn.ldap[0].bindCredential=${ldap.bindCredential}
cas.authn.ldap[0].searchFilter=${ldap.searchFilter}
cas.authn.ldap[0].poolPassivator=${ldap.poolPassivator}
cas.authn.ldap[0].principalAttributeId=${ldap.principalAttributeId}
cas.authn.ldap[0].principalTransformation.groovy.location=${ldap.principalTransformation}
cas.authn.ldap[0].followReferrals=${ldap.followReferrals}
cas.authn.ldap[0].minPoolSize=${ldap.minPoolSize}
cas.authn.ldap[0].maxPoolSize=${ldap.maxPoolSize}
cas.authn.ldap[0].hostnameVerifier=${ldap.hostnameVerifier}
cas.authn.ldap[0].useSsl=${ldap.useSsl}
cas.authn.ldap[0].passwordPolicy.enabled=${passwordPolicy.enabled}
cas.authn.ldap[0].passwordPolicy.warnAll=${passwordPolicy.warnAll}
cas.authn.ldap[0].passwordPolicy.accountStateHandlingEnabled=${passwordPolicy.accountStateHandlingEnabled}
cas.authn.ldap[0].passwordPolicy.customPolicyClass=${passwordPolicy.customPolicyClass}

cas.authn.ldap[1].order=1
cas.authn.ldap[1].name=Active Directory 2 - OU=Users,OU=SAF
cas.authn.ldap[1].baseDn=OU=Users,OU=SAF,DC=iesabroad,DC=org
cas.authn.ldap[1].type=${ldap.type}
cas.authn.ldap[1].ldapUrl=${ldap.ldapUrl}
cas.authn.ldap[1].bindDn=${ldap.bindDn}
cas.authn.ldap[1].bindCredential=${ldap.bindCredential}
cas.authn.ldap[1].searchFilter=${ldap.searchFilter}
cas.authn.ldap[1].poolPassivator=${ldap.poolPassivator}
cas.authn.ldap[1].principalAttributeId=${ldap.principalAttributeId}
cas.authn.ldap[1].principalTransformation.groovy.location=${ldap.principalTransformation}
cas.authn.ldap[1].followReferrals=${ldap.followReferrals}
cas.authn.ldap[1].minPoolSize=${ldap.minPoolSize}
cas.authn.ldap[1].maxPoolSize=${ldap.maxPoolSize}
cas.authn.ldap[1].hostnameVerifier=${ldap.hostnameVerifier}
cas.authn.ldap[1].useSsl=${ldap.useSsl}
cas.authn.ldap[1].passwordPolicy.enabled=${passwordPolicy.enabled}
cas.authn.ldap[1].passwordPolicy.warnAll=${passwordPolicy.warnAll}
cas.authn.ldap[1].passwordPolicy.accountStateHandlingEnabled=${passwordPolicy.accountStateHandlingEnabled}
cas.authn.ldap[1].passwordPolicy.customPolicyClass=${passwordPolicy.customPolicyClass}

cas.authn.ldap[2].order=2
cas.authn.ldap[2].name=Active Directory 3 - OU=Users,OU=China,OU=SAF Country Offices
cas.authn.ldap[2].baseDn=OU=Users,OU=China,OU=SAF Country Offices,DC=iesabroad,DC=org
cas.authn.ldap[2].type=${ldap.type}
cas.authn.ldap[2].ldapUrl=${ldap.ldapUrl}
cas.authn.ldap[2].bindDn=${ldap.bindDn}
cas.authn.ldap[2].bindCredential=${ldap.bindCredential}
cas.authn.ldap[2].searchFilter=${ldap.searchFilter}
cas.authn.ldap[2].poolPassivator=${ldap.poolPassivator}
cas.authn.ldap[2].principalAttributeId=${ldap.principalAttributeId}
cas.authn.ldap[2].principalTransformation.groovy.location=${ldap.principalTransformation}
cas.authn.ldap[2].followReferrals=${ldap.followReferrals}
cas.authn.ldap[2].minPoolSize=${ldap.minPoolSize}
cas.authn.ldap[2].maxPoolSize=${ldap.maxPoolSize}
cas.authn.ldap[2].hostnameVerifier=${ldap.hostnameVerifier}
cas.authn.ldap[2].useSsl=${ldap.useSsl}
cas.authn.ldap[2].passwordPolicy.enabled=${passwordPolicy.enabled}
cas.authn.ldap[2].passwordPolicy.warnAll=${passwordPolicy.warnAll}
cas.authn.ldap[2].passwordPolicy.accountStateHandlingEnabled=${passwordPolicy.accountStateHandlingEnabled}
cas.authn.ldap[2].passwordPolicy.customPolicyClass=${passwordPolicy.customPolicyClass}

cas.authn.ldap[3].order=3
cas.authn.ldap[3].name=Active Directory 4 - OU=Users,OU=Japan,OU=SAF Country Offices
cas.authn.ldap[3].baseDn=OU=Users,OU=Japan,OU=SAF Country Offices,DC=iesabroad,DC=org
cas.authn.ldap[3].type=${ldap.type}
cas.authn.ldap[3].ldapUrl=${ldap.ldapUrl}
cas.authn.ldap[3].bindDn=${ldap.bindDn}
cas.authn.ldap[3].bindCredential=${ldap.bindCredential}
cas.authn.ldap[3].searchFilter=${ldap.searchFilter}
cas.authn.ldap[3].poolPassivator=${ldap.poolPassivator}
cas.authn.ldap[3].principalAttributeId=${ldap.principalAttributeId}
cas.authn.ldap[3].principalTransformation.groovy.location=${ldap.principalTransformation}
cas.authn.ldap[3].followReferrals=${ldap.followReferrals}
cas.authn.ldap[3].minPoolSize=${ldap.minPoolSize}
cas.authn.ldap[3].maxPoolSize=${ldap.maxPoolSize}
cas.authn.ldap[3].hostnameVerifier=${ldap.hostnameVerifier}
cas.authn.ldap[3].useSsl=${ldap.useSsl}
cas.authn.ldap[3].passwordPolicy.enabled=${passwordPolicy.enabled}
cas.authn.ldap[3].passwordPolicy.warnAll=${passwordPolicy.warnAll}
cas.authn.ldap[3].passwordPolicy.accountStateHandlingEnabled=${passwordPolicy.accountStateHandlingEnabled}
cas.authn.ldap[3].passwordPolicy.customPolicyClass=${passwordPolicy.customPolicyClass}

cas.authn.ldap[4].order=4
cas.authn.ldap[4].name=Active Directory 5 - OU=Users,OU=Korea,OU=SAF Country Offices
cas.authn.ldap[4].baseDn=OU=Users,OU=Korea,OU=SAF Country Offices,DC=iesabroad,DC=org
cas.authn.ldap[4].type=${ldap.type}
cas.authn.ldap[4].ldapUrl=${ldap.ldapUrl}
cas.authn.ldap[4].bindDn=${ldap.bindDn}
cas.authn.ldap[4].bindCredential=${ldap.bindCredential}
cas.authn.ldap[4].searchFilter=${ldap.searchFilter}
cas.authn.ldap[4].poolPassivator=${ldap.poolPassivator}
cas.authn.ldap[4].principalAttributeId=sAMAccountName
cas.authn.ldap[4].principalTransformation.groovy.location=${ldap.principalTransformation}
cas.authn.ldap[4].followReferrals=${ldap.followReferrals}
cas.authn.ldap[4].minPoolSize=${ldap.minPoolSize}
cas.authn.ldap[4].maxPoolSize=${ldap.maxPoolSize}
cas.authn.ldap[4].hostnameVerifier=${ldap.hostnameVerifier}
cas.authn.ldap[4].useSsl=${ldap.useSsl}
cas.authn.ldap[4].passwordPolicy.enabled=${passwordPolicy.enabled}
cas.authn.ldap[4].passwordPolicy.warnAll=${passwordPolicy.warnAll}
cas.authn.ldap[4].passwordPolicy.accountStateHandlingEnabled=${passwordPolicy.accountStateHandlingEnabled}
cas.authn.ldap[4].passwordPolicy.customPolicyClass=${passwordPolicy.customPolicyClass}

cas.authn.attributeRepository.jdbc[0].attributes.role=personRole
cas.authn.attributeRepository.jdbc[0].singleRow=false
cas.authn.attributeRepository.jdbc[0].columnMappings.attribute=App_id
cas.authn.attributeRepository.jdbc[0].user=${datasource.username}
cas.authn.attributeRepository.jdbc[0].password=${datasource.password}
cas.authn.attributeRepository.jdbc[0].url=${datasource.url}
#cas.authn.attributeRepository.jdbc[0].sql=SELECT 'role' as attribute, App_id FROM cerbadm.CER_ACCOUNT_APP as value WHERE {0} UNION ALL select 'email' as attribute, Email as value from cerbadm.CER_ACCOUNT WHERE {0}
cas.authn.attributeRepository.jdbc[0].sql=SELECT 'role' as attribute, App_id FROM cerbadm.CER_ACCOUNT_APP as value WHERE {0}
cas.authn.attributeRepository.jdbc[0].username=uid
cas.authn.attributeRepository.jdbc[0].driverClass=${datasource.driver}
cas.authn.attributeRepository.jdbc[0].healthQuery=select 1
as.authn.attributeRepository.defaultAttributesToRelease=cn,givenName,uid,personRole,email

# cas session timeout, (TTL is rolling session, TTK is max total time)
#cas.ticket.tgt.timeout.maxTimeToLiveInSeconds=120
cas.ticket.tgt.timeout.maxTimeToLiveInSeconds=1800
cas.ticket.tgt.timeToKillInSeconds=28800

cas.serviceRegistry.initFromJson=true
cas.serviceRegistry.json.location=${config.base}/services


cas.authn.pm.enabled=true
cas.authn.pm.policyPattern=((?=.*[A-Z])(?=.*?[a-z])(?=.*\\d)|(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z0-9])|(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z0-9])|(?=.*[a-z])(?=.*\\d)(?=.*[^a-zA-Z0-9])).{8,}

cas.authn.pm.reset.mail.from=support@iesabroad.org
cas.authn.pm.reset.mail.subject=Password Reset Request
cas.authn.pm.reset.expirationMinutes=30
cas.authn.pm.reset.securityQuestionsEnabled=false
cas.authn.pm.autoLogin=false

cas.authn.pm.ldap.searchFilter=${ldap.searchFilter}
cas.authn.pm.ldap.baseDn=OU=Service Accounts,DC=iesabroad,DC=org
cas.authn.pm.ldap.poolPassivator=${ldap.poolPassivator}
cas.authn.pm.ldap.followReferrals=${ldap.followReferrals}
cas.authn.pm.ldap.bindDn=${ldap.bindDn}
cas.authn.pm.ldap.bindCredential=${ldap.bindCredential}
cas.authn.pm.ldap.name=Active Directory 1
cas.authn.pm.ldap.ldapUrl=${ldap.ldapUrl}
cas.authn.pm.ldap.validator.baseDn=DC=iesabroad,DC=org
cas.authn.pm.ldap.useSsl=${ldap.useSsl}

#cas.authn.pm.ldap.type=${ldap.type}

#TODO - real creds
spring.mail.host=smtp.gmail.com.
spring.mail.port=587
spring.mail.username=mkoehle@gmail.com
spring.mail.password=uetqaconosulgkzw
spring.mail.testConnection=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.datasource.username=${datasource.username}
spring.datasource.password=${datasource.password}
spring.datasource.url=${datasource.url}
spring.datasource.driver-class-name=${datasource.driver}

spring.thymeleaf.mode=LEGACYHTML5
#cas.theme.defaultThemeName=iesabroad
cas.logout.followServiceRedirects=true
